/*
 * Copyright 2008-present MongoDB, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

description = "A Reactive Streams implementation of the MongoDB Java driver"
archivesBaseName = 'mongodb-driver-reactivestreams'

dependencies {
    api project(path: ':bson', configuration: 'default')
    api project(path: ':driver-core', configuration: 'default')

    api 'org.reactivestreams:reactive-streams:1.0.2'
    implementation platform("io.projectreactor:reactor-bom:$projectReactorVersion")
    implementation 'io.projectreactor:reactor-core'

    testImplementation project(':bson').sourceSets.test.output
    testImplementation project(':driver-sync')
    testImplementation project(':driver-sync').sourceSets.test.output
    testImplementation project(':driver-core').sourceSets.test.output
    testImplementation 'org.reactivestreams:reactive-streams-tck:1.0.2'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.5.13'
}

sourceSets {
    test.groovy.srcDirs += ['src/examples']
}

test {
    exclude 'tour/**'
}

// Reactive Streams TCK uses TestNG, and Gradle can't run TestNG and JUnit in the same run.
task tckTest(type: Test) {
    useTestNG()
    scanForTestClasses = false

    classpath = sourceSets.test.runtimeClasspath
    testClassesDirs = sourceSets.test.output.classesDirs

    binResultsDir = file("$buildDir/$name-results/binary")
    reports {
        html.destination = file("$buildDir/reports/$name")
        junitXml.destination = binResultsDir.parentFile
    }

    maxParallelForks = 1
}

ext {
    pomName = 'The MongoDB Reactive Streams Driver'
}

afterEvaluate {
    jar.manifest.attributes['Automatic-Module-Name'] = 'org.mongodb.driver.reactivestreams'
    jar.manifest.attributes['Bundle-SymbolicName'] = 'org.mongodb.driver-reactivestreams'
    jar.manifest.attributes['Import-Package'] = [
            'org.bson.*',
            'com.mongodb.crypt.capi.*;resolution:=optional',
            'com.mongodb.*',
    ].join(',')
}
