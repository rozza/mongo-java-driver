<!--
  ~ Copyright 2008-present MongoDB, Inc.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<FindBugsFilter>
    <!-- specific excludes which should be fixed -->
    <Match>
        <Class name="org.bson.JSONWriterSettings"/>
    </Match>
    <Match>
        <Bug code="EI,EI2"/>
    </Match>

    <Match>
        <Class name="org.bson.types.ObjectId"/>
        <Bug pattern="DMI_RANDOM_USED_ONLY_ONCE"/>
    </Match>

    <Match>
        <Class name="com.mongodb.internal.connection.AwsAuthenticator$AwsSaslClient"/>
        <Bug pattern="DMI_RANDOM_USED_ONLY_ONCE"/>
    </Match>

    <Match>
        <Class name="com.mongodb.internal.connection.ScramShaAuthenticator$DefaultRandomStringGenerator"/>
        <Bug pattern="DMI_RANDOM_USED_ONLY_ONCE"/>
    </Match>

    <Match>
        <Class name="org.bson.codecs.BsonValueCodecProvider"/>
        <Method name="getBsonTypeClassMap"/>
        <Bug pattern="MS_EXPOSE_REP"/>
    </Match>

    <!-- these specific issues are deliberate design decisions -->

    <!-- Deliberately ignoring this, as the check for a null SSLParameters is actually necessary.
         See https://jira.mongodb.org/browse/JAVA-2876 for details. -->
    <Match>
        <Class name="com.mongodb.client.internal.KeyManagementService"/>
        <Method name="enableHostNameVerification" params="javax.net.ssl.SSLSocket"/>
        <Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE"/>
    </Match>

    <!-- Deliberately ignoring this, as many BSONObject subclasses don't do it -->
    <Match>
        <Package name="com.mongodb"/>
        <Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
    </Match>

    <!-- Deliberately ignoring return value of CountDownLatch.await -->
    <Match>
        <Class name="com.mongodb.internal.connection.BaseCluster"/>
        <Bug pattern="RV_RETURN_VALUE_IGNORED"/>
    </Match>

    <!-- The underlying call to GridFSInputFile closes the file -->
    <Match>
        <Class name="com.mongodb.gridfs.GridFS"/>
        <Method name="createFile" params="java.io.File"/>
        <Bug pattern="OBL_UNSATISFIED_OBLIGATION"/>
    </Match>

    <Match>
        <Class name="com.mongodb.DocumentCodec"/>
        <Bug pattern="NM_SAME_SIMPLE_NAME_AS_SUPERCLASS"/>
    </Match>

    <Match>
        <Class name="org.mongodb.DatabaseTestCase" />
        <Bug pattern="MS_PKGPROTECT"/>
    </Match>

    <Match>
        <Class name="org.mongodb.FunctionalSpecification"/>
        <Bug pattern="MS_PKGPROTECT"/>
    </Match>

    <Match>
        <Class name="com.mongodb.DatabaseTestCase"/>
        <Bug pattern="MS_PKGPROTECT"/>
    </Match>

    <Match>
        <Class name="org.bson.types.StringRangeSet$NumberStringComparator"/>
        <Bug pattern="SE_COMPARATOR_SHOULD_BE_SERIALIZABLE"/>
    </Match>

    <!-- Special handling of clone method for cloneable BsonValue subclasses.  By design, they don't call super.clone() -->
    <Match>
        <Class name="org.bson.BsonArray"/>
        <Method name="clone"/>
        <Bug pattern="CN_IDIOM_NO_SUPER_CALL"/>
    </Match>

    <Match>
        <Class name="org.bson.BsonDocument"/>
        <Method name="clone"/>
        <Bug pattern="CN_IDIOM_NO_SUPER_CALL"/>
    </Match>

    <Match>
        <Class name="org.bson.BsonDocumentWrapper"/>
        <Method name="clone"/>
        <Bug pattern="CN_IDIOM_NO_SUPER_CALL"/>
    </Match>

    <Match>
        <Class name="org.bson.RawBsonArray"/>
        <Method name="clone"/>
        <Bug pattern="CN_IDIOM_NO_SUPER_CALL"/>
    </Match>

    <Match>
        <Class name="org.bson.codecs.jsr310.Jsr310CodecProvider"/>
        <Bug pattern="DE_MIGHT_IGNORE"/>
    </Match>

    <!-- Test exclusions -->
    <!-- All bugs in test classes, except for JUnit-specific bugs -->
    <Match>
        <Class name="~.*\.*Test"/>
        <Not>
            <Bug code="IJU"/>
        </Not>
    </Match>

    <!-- Deliberate use of an unused field in the Person POJO class -->
    <Match>
        <Class name="com.mongodb.acceptancetest.crud.pojo.Person"/>
        <Bug pattern="SS_SHOULD_BE_STATIC"/>
    </Match>

    <!-- Spock tests seem to fail the serial version ID test when stubbing.  Annoying. -->
    <Match>
        <Source name="~.*\.groovy"/>
        <Bug pattern="SE_NO_SERIALVERSIONID,LI_LAZY_INIT_STATIC,EQ_UNUSUAL,IT_NO_SUCH_ELEMENT,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT"/>
    </Match>

    <!-- Strange findbugs issues -->
    <Match>
        <Source name="~.*ClusterSettingsSpecification\.groovy"/>
        <Bug pattern="RANGE_ARRAY_INDEX"/>
    </Match>

    <Match>
        <Class name="~com.mongodb.internal.connection.AbstractByteBufBsonDocument.*"/>
        <Bug pattern="NP_BOOLEAN_RETURN_NULL"/>
    </Match>

    <Match>
        <Class name="~com.mongodb.client.ClientSession.*"/>
        <Bug pattern="NM_SAME_SIMPLE_NAME_AS_INTERFACE"/>
    </Match>

    <Match>
        <Class name="~com.mongodb.reactivestreams.client.ClientSession.*"/>
        <Bug pattern="NM_SAME_SIMPLE_NAME_AS_INTERFACE"/>
    </Match>

    <Match>
        <Class name="~com.mongodb.kotlin.client.ClientSession.*"/>
        <Bug pattern="NM_SAME_SIMPLE_NAME_AS_INTERFACE"/>
    </Match>

    <Match>
        <Class name="~com.mongodb.kotlin.client.coroutine.ClientSession.*"/>
        <Bug pattern="NM_SAME_SIMPLE_NAME_AS_INTERFACE"/>
    </Match>

    <Match>
        <Class name="~com.mongodb.internal.async.client.ClientSession.*"/>
        <Bug pattern="NM_SAME_SIMPLE_NAME_AS_INTERFACE"/>
    </Match>

    <Match>
        <Class name="~com.mongodb.async.client.internal.AsyncCryptConnection.*"/>
        <Bug pattern="RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT"/>
    </Match>

    <!-- Spotbugs assumes that SSLSocket#getSSLParameters never returns null, when that is not the case for all JDKs -->
    <Match>
        <Class name="com.mongodb.internal.connection.SslHelper"/>
        <Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE"/>
    </Match>

    <Match>
        <Class name="com.mongodb.client.internal.CryptConnection"/>
        <Method name="retain"/>
        <Bug pattern="RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT"/>
    </Match>

    <Match>
        <Class name="~com.mongodb.reactivestreams.client.internal.crypt.*"/>
        <Method name="retain"/>
        <Bug pattern="RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT"/>
    </Match>

    <!-- Caused by Java 11 generating a null check on try with resources.
         See https://github.com/spotbugs/spotbugs/issues/756 for details. -->
    <Match>
        <Bug pattern="RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE"/>
    </Match>

    <!-- AWS use UNIX-style line endings -->
    <Match>
        <Class name="com.mongodb.internal.connection.AuthorizationHeader"/>
        <Bug pattern="VA_FORMAT_STRING_USES_NEWLINE"/>
    </Match>

    <!-- The method is a wrapper for `Condition.await`, naturally it does not call it in a loop. -->
    <Match>
        <Class name="com.mongodb.internal.connection.DefaultConnectionPool$OpenConcurrencyLimiter"/>
        <Method name="awaitNanos"/>
        <Bug pattern="WA_AWAIT_NOT_IN_LOOP"/>
    </Match>

    <!-- The checker fails to see that the code prevents concurrent incrementation by using exclusive locking. -->
    <Match>
        <Class name="com.mongodb.internal.connection.DefaultConnectionPool$StateAndGeneration"/>
        <Field name="generation"/>
        <Bug pattern="VO_VOLATILE_INCREMENT"/>
    </Match>
    <Match>
        <Class name="com.mongodb.internal.connection.ConcurrentPool$StateAndPermits"/>
        <Field name="permits"/>
        <Bug pattern="VO_VOLATILE_INCREMENT"/>
    </Match>

    <!-- Non-short-circuit operators are used intentionally. -->
    <Match>
        <Class name="com.mongodb.internal.connection.ConcurrentPool$StateAndPermits"/>
        <Method name="acquirePermit"/>
        <Bug pattern="NS_DANGEROUS_NON_SHORT_CIRCUIT"/>
    </Match>
    <Match>
        <Class name="com.mongodb.internal.connection.DefaultConnectionPool$OpenConcurrencyLimiter"/>
        <Method name="acquirePermitOrGetAvailableOpenedConnection"/>
        <Bug pattern="NS_NON_SHORT_CIRCUIT"/>
    </Match>

    <!-- Kotlin false positive for validating annotations  -->
    <Match>
        <Class name="org.bson.codecs.kotlin.DataClassCodec$Companion"/>
        <Method name="~.*validateAnnotations.*"/>
        <Bug pattern="UC_USELESS_OBJECT"/>
    </Match>

    <Match>
        <Class name="org.bson.codecs.kotlinx.KotlinSerializerCodec$Companion"/>
        <Method name="~.*validateAnnotations.*"/>
        <Bug pattern="UC_USELESS_OBJECT"/>
    </Match>

    <!-- Spotbugs reports false positives for suspendable operations with default params
         see: https://github.com/Kotlin/kotlinx.coroutines/issues/3099
    -->
    <Match>
        <Class name="com.mongodb.kotlin.client.coroutine.MongoClient"/>
        <Method name="startSession"/>
        <Bug pattern="NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE"/>
    </Match>
    <Match>
        <Class name="~com.mongodb.kotlin.client.coroutine.*"/>
        <Bug pattern="NP_NONNULL_PARAM_VIOLATION"/>
    </Match>

    <!-- Ignoring await return; intended to be used in a loop -->
    <Match>
        <Class name="com.mongodb.internal.time.Timeout"/>
        <Method name="awaitOn"/>
        <Bug pattern="RV_RETURN_VALUE_IGNORED_BAD_PRACTICE"/>
    </Match>
    <Match>
        <Class name="com.mongodb.internal.time.Timeout"/>
        <Method name="awaitOn"/>
        <Bug pattern="RV_RETURN_VALUE_IGNORED"/>
    </Match>
    <Match>
        <Class name="com.mongodb.internal.time.Timeout"/>
        <Method name="awaitOn"/>
        <Bug pattern="WA_AWAIT_NOT_IN_LOOP"/>
    </Match>

    <!-- Void method returning null but @NotNull API -->
    <Match>
        <Class name="com.mongodb.internal.operation.DropIndexOperation"/>
        <Method name="execute"/>
        <Bug pattern="NP_NONNULL_RETURN_VIOLATION"/>
    </Match>

</FindBugsFilter>
