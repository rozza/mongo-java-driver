import static org.gradle.util.CollectionUtils.single

/*
 * Copyright 2008-present MongoDB, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


def javaMainProjects = subprojects.findAll { !['util', 'driver-embedded-android'].contains(it.name) }
task docs(type: Javadoc) {
    destinationDir = new File(rootDir, 'build/docs')
    javaMainProjects.each { proj ->
        proj.tasks.withType(Javadoc).each { javadocTask ->
            source += javadocTask.source
            classpath += javadocTask.classpath
            excludes += javadocTask.excludes
            includes += javadocTask.includes
            dependsOn +=javadocTask.dependsOn
        }
    }
}

def utilProject = project(':util')
allprojects {
    afterEvaluate { project ->
        tasks.withType(Javadoc) {
            dependsOn utilProject.compileJava //We need taglets to be compiled
            exclude "**/com/mongodb/**/benchmark/**"
            exclude "**/com/mongodb/**/internal/**"
            exclude "**/org/bson/**/internal/**"
            options {
                author = true
                version = true
                links 'https://docs.oracle.com/javase/9/docs/api/'
                tagletPath single(utilProject.sourceSets.main.output.classesDirs)
                taglets 'ManualTaglet'
                taglets 'DochubTaglet'
                taglets 'ServerReleaseTaglet'
                encoding = 'UTF-8'
                charSet 'UTF-8'
                docEncoding 'UTF-8'
                addBooleanOption("html4", true)
                addBooleanOption("-allow-script-in-comments", true)
                header = '''
            | <script type="text/javascript">
            | <!-- Set the location hash in the classFrame -->
            | try {
            |   locationHash = top.location.hash;
            |   if (window.name == "classFrame" && locationHash != "") {
            |     window.location.hash = locationHash;
            |   }
            | } catch (error) {}
            | <!-- GA Tracking code -->
            | if (window.name == "" || window.name == "classFrame") {
            |     var _elqQ = _elqQ || [];
            |     _elqQ.push(["elqSetSiteId", "413370795"]);
            |     _elqQ.push(["elqTrackPageView"]);
            |     (function () {
            |     function async_load() { var s = document.createElement("script"); s.type = "text/javascript"; s.async = true; s.src = "//img03.en25.com/i/elqCfg.min.js"; var x = document.getElementsByTagName("script")[0]; x.parentNode.insertBefore(s, x); }
            |     if (window.addEventListener) window.addEventListener("DOMContentLoaded", async_load, false);
            |     else if (window.attachEvent) window.attachEvent("onload", async_load);
            |     })();
            | }
            | </script>'''.stripMargin()
            }
        }
    }
}
